#Область ОписаниеПеременных

&НаКлиенте
Перем КонтекстЯдра;
&НаКлиенте
Перем Утверждения;
&НаКлиенте
Перем Ожидаем;
&НаКлиенте
Перем СтроковыеУтилиты;
&НаКлиенте
Перем ИсключенияИзПроверок;
&НаКлиенте
Перем ВыводитьИсключения;
&НаКлиенте
Перем ОтборПоПрефиксу;
&НаКлиенте
Перем ПрефиксОбъектов;

#КонецОбласти

#Область ИнтерфейсТестирования

// Инициализация
//
// Параметры:
//  КонтекстЯдраПараметр - xddTestRunner.epf - Внешняя обработка, браузер тестов. По умолчанию находится в каталоге "C:\Program Files\OneScript\lib\add\"
//
&НаКлиенте
Процедура Инициализация(КонтекстЯдраПараметр) Экспорт
	
	КонтекстЯдра 		= КонтекстЯдраПараметр;
	
	// подключение плагинов, установка переменных формы
	Утверждения 		= КонтекстЯдра.Плагин("БазовыеУтверждения"); // обработка с именем "БазовыеУтверждения.epf", находится в каталоге "C:\Program Files\OneScript\lib\add\plugins" 
	СтроковыеУтилиты 	= КонтекстЯдра.Плагин("СтроковыеУтилиты"); // обработка с именем "СтроковыеУтилиты.epf", находится в каталоге "C:\Program Files\OneScript\lib\add\plugins"
	Ожидаем 			= КонтекстЯдра.Плагин("УтвержденияBDD"); // обработка с именем "УтвержденияBDD.epf", находится в каталоге "C:\Program Files\OneScript\lib\add\plugins" 
	
	Настройки(КонтекстЯдра, ИмяТеста());
	
КонецПроцедуры

// Выполняет заполнение набора тестов
//
// Параметры:
//  НаборТестов			 - ЗагрузчикФайла.epf	 - Внешняя обработка - плагин. По умолчанию находится в каталоге "C:\Program Files\OneScript\lib\add\plugins"
//  КонтекстЯдраПараметр - xddTestRunner.epf	 - Внешняя обработка, браузер тестов. По умолчанию находится в каталоге "C:\Program Files\OneScript\lib\add\"
//
&НаКлиенте
Процедура ЗаполнитьНаборТестов(НаборТестов, КонтекстЯдраПараметр) Экспорт
	
	Инициализация(КонтекстЯдраПараметр);
	
	Если Не ВыполнятьТест(КонтекстЯдра) Тогда
		Возврат;
	КонецЕсли;
	
	Регистры = Регистры(ПрефиксОбъектов, ОтборПоПрефиксу);
	
	Для Каждого КлючЗначение Из Регистры Цикл
		
		Если Не ВыводитьИсключения Тогда
			МассивТестов = УбратьИсключения(КлючЗначение.Значение);
		Иначе
			МассивТестов = КлючЗначение.Значение;
		КонецЕсли;
		
		Если МассивТестов.Количество() Тогда
			НаборТестов.НачатьГруппу(КлючЗначение.Ключ, Истина);
		КонецЕсли;
		
		Для Каждого Тест Из МассивТестов Цикл
			
			ИмяПроцедуры 		= "ТестДолжен_ПроверитьРегистр";
			ТекстПояснения 		= НСтр("ru = 'Проверка регистра на наличие строковых измерений'");
			ИмяТеста 			= КонтекстЯдра.СтрШаблон_("%1 [%2]", Тест.ПолноеИмя, ТекстПояснения);
			НаборТестов.Добавить( ИмяПроцедуры, НаборТестов.ПараметрыТеста(Тест.Имя, Тест.ПолноеИмя), ИмяТеста );
			
		КонецЦикла;
		
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#Область РаботаСНастройками

// Применить настройки теста из внешнего файла
//
// Параметры:
//  КонтекстЯдра	 - xddTestRunner.epf - Внешняя обработка, браузер тестов. По умолчанию находится в каталоге "C:\Program Files\OneScript\lib\add\"
//  ПутьНастройки	 - Строка			 - имя теста, как указано  в имени обработки
//
&НаКлиенте
Процедура Настройки(КонтекстЯдра, Знач ПутьНастройки)

	Если ЗначениеЗаполнено(Объект.Настройки) Тогда
		Возврат;
	КонецЕсли;
	
	ПрефиксОбъектов 		= "";
	ОтборПоПрефиксу 		= Ложь;
	ИсключенияИзПроверок 	= Новый Соответствие;
	ВыводитьИсключения 		= Истина;
	ПлагинНастроек 			= КонтекстЯдра.Плагин("Настройки");
	Объект.Настройки 		= ПлагинНастроек.ПолучитьНастройку(ПутьНастройки); // выполняет чтение настроек из JSON - файла по ключу ИмяТеста()
	Настройки 				= Объект.Настройки;
	
	Если Не ЗначениеЗаполнено(Настройки) Тогда
		Объект.Настройки = Новый Структура(ПутьНастройки, Неопределено);
		Возврат;
	КонецЕсли;
	
	Если Настройки.Свойство("Префикс") Тогда
		ПрефиксОбъектов = ВРег(Настройки.Префикс);
	КонецЕсли;
		
	Если Настройки.Свойство("ОтборПоПрефиксу") Тогда
		ОтборПоПрефиксу = Настройки.ОтборПоПрефиксу;
	КонецЕсли;

	Если Настройки.Свойство("ВыводитьИсключения") Тогда
		ВыводитьИсключения = Настройки.ВыводитьИсключения;
	КонецЕсли;
	
	Если Настройки.Свойство("ИсключенияИзПроверок") Тогда
		ИсключенияИзПроверок(Настройки);
	КонецЕсли;
	
КонецПроцедуры

// Исключения из проверок
//
// Параметры:
//  Настройки	 - Структура, ФиксированнаяСтруктура - см. ПлагинНастроек.ПолучитьНастройку(ПутьНастройки) 
//
&НаКлиенте
Процедура ИсключенияИзПроверок(Настройки)

	Для Каждого ИсключенияИзПроверокПоОбъектам Из Настройки.ИсключенияИзПроверок Цикл
		Для Каждого ИсключениеИзПроверок Из ИсключенияИзПроверокПоОбъектам.Значение Цикл
			ИсключенияИзПроверок.Вставить(ВРег(ИсключенияИзПроверокПоОбъектам.Ключ + "." + ИсключениеИзПроверок), Истина);
		КонецЦикла;
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#Область Тесты

&НаКлиенте
Процедура ТестДолжен_ПроверитьРегистр(ИмяРегистра, ПолноеИмяРегистра) Экспорт
		
	ПропускатьТест = ПропускатьТест(ПолноеИмяРегистра);
	
	Результат = ПроверитьРегистрСервер(ИмяРегистра,ПолноеИмяРегистра);
	
	Если Результат <> "" И ПропускатьТест.Пропустить Тогда
		Утверждения.ПропуститьТест(ТекстСообщения(ИмяРегистра, Результат));
	Иначе
		Утверждения.Проверить(Результат = "", ТекстСообщения(ИмяРегистра, Результат));
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПроверитьРегистрСервер(ИмяРегистра, ПолноеИмяРегистра)
	
	Результат 			= "";
	СтроковыеУтилиты 	= СтроковыеУтилиты();
	ШаблонСообщения 	= НСтр("ru = 'Обратите внимание на строковые измерения ""%1"".'");
	
	Регистр = Метаданные.НайтиПоПолномуИмени(ПолноеИмяРегистра);
	
	СтроковыеИзмерения = Новый Массив;
	
	Для Каждого ИзмерениеРегистра Из Регистр.Измерения Цикл
		
		ЕстьТипСтрока = ИзмерениеРегистра.Тип.СодержитТип(Тип("Строка"));
		
		Если ЕстьТипСтрока Тогда
			СтроковыеИзмерения.Добавить(ИзмерениеРегистра.Имя);
		КонецЕсли;
		
	КонецЦикла;
	
	ИзмеренияСтрокой = СтрСоединить(СтроковыеИзмерения, Символы.ПС);
	
	Если ЗначениеЗаполнено(ИзмеренияСтрокой) Тогда
		Результат = ДобавитьТекстОшибки(СтроковыеУтилиты, Результат, ШаблонСообщения, ИзмеренияСтрокой);
	КонецЕсли;
	
	Возврат Результат;

КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Функция ДобавитьТекстОшибки(СтроковыеУтилиты, Знач Результат, Знач ШаблонОшибки, ТекстОшибки)
	
	Разделитель = ?(ЗначениеЗаполнено(Результат), ",", "");
	
	Возврат СтроковыеУтилиты.ПодставитьПараметрыВСтроку(ШаблонОшибки, ТекстОшибки, Разделитель);
	
КонецФункции

&НаКлиенте
Функция ПропускатьТест(ПолноеИмяМетаданных)

	Результат = Новый Структура;
	Результат.Вставить("ТекстСообщения", "");
	Результат.Вставить("Пропустить", Ложь);
		
	Если ИсключенИзПроверок(ВРег(ПолноеИмяМетаданных)) Тогда
		ШаблонСообщения = НСтр("ru = '""%1"" исключен из проверки.'");
		Результат.ТекстСообщения = СтроковыеУтилиты.ПодставитьПараметрыВСтроку(ШаблонСообщения, ПолноеИмяМетаданных);
		Результат.Пропустить = Истина;
		Возврат Результат;
	КонецЕсли;
			
	Возврат Результат;

КонецФункции

&НаКлиенте
Функция ИсключенИзПроверок(ПолноеИмяМетаданных)
	
	Результат = Ложь;
	МассивСтрокИмени = СтроковыеУтилиты.РазложитьСтрокуВМассивПодстрок(ПолноеИмяМетаданных, ".");
	ИсключениеВсехОбъектов = СтроковыеУтилиты.ПодставитьПараметрыВСтроку("%1.*", МассивСтрокИмени[0]);
	
	Если ИсключенияИзПроверок.Получить(ВРег(ПолноеИмяМетаданных)) <> Неопределено
	 Или ИсключенияИзПроверок.Получить(ВРег(ИсключениеВсехОбъектов)) <> Неопределено Тогда
		Результат = Истина;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Функция УбратьИсключения(МассивТестов)

	Результат = Новый Массив;
	
	Для Каждого Тест Из МассивТестов Цикл
		Если Не ИсключенИзПроверок(Тест.ПолноеИмя) Тогда
			Результат.Добавить(Тест);
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;

КонецФункции

&НаКлиенте
Функция ТекстСообщения(ИмяРегистра, Результат)

	ШаблонСообщения = НСтр("ru = 'Для регистра ""%1"" есть замечания:%2.'");
	ТекстСообщения = СтроковыеУтилиты.ПодставитьПараметрыВСтроку(ШаблонСообщения, ИмяРегистра, Результат);
	
	Возврат ТекстСообщения;

КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ИмяСодержитПрефикс(Имя, Префикс)
	
	Если Не ЗначениеЗаполнено(Префикс) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ДлинаПрефикса = СтрДлина(Префикс);
	Возврат СтрНайти(ВРег(Лев(Имя, ДлинаПрефикса)), Префикс) > 0;
	
КонецФункции

&НаКлиенте
Функция ИмяТеста()
	
	Если Не ЗначениеЗаполнено(Объект.ИмяТеста) Тогда
		Объект.ИмяТеста = ИмяТестаНаСервере();
	КонецЕсли;
	
	Возврат Объект.ИмяТеста;
	
КонецФункции

&НаСервере
Функция ИмяТестаНаСервере()
	Возврат РеквизитФормыВЗначение("Объект").Метаданные().Имя;
КонецФункции

// Выполняет проверку выполнять тест
//
// Параметры:
//  КонтекстЯдра - xddTestRunner.epf - Внешняя обработка, браузер тестов. По умолчанию находится в каталоге "C:\Program Files\OneScript\lib\add\"
//
// Для включения теста необходимо изменить переменную ВыполнятьТест на Истина.
// При наличии файла - настроек значение ВыполнятьТест определяется из файла.
// 
// Возвращаемое значение:
//  ВыполнятьТест - Булево
//
&НаКлиенте
Функция ВыполнятьТест(КонтекстЯдра)
	
	ВыполнятьТест = Истина;
	Настройки(КонтекстЯдра, ИмяТеста());
	Настройки = Объект.Настройки;
	
	Если Не ЗначениеЗаполнено(Настройки) Тогда
		Возврат ВыполнятьТест;
	КонецЕсли;
		
	Если ТипЗнч(Настройки) = Тип("Структура") И Настройки.Свойство("Используется") Тогда
		ВыполнятьТест = Настройки.Используется;
	КонецЕсли;
	
	Возврат ВыполнятьТест;

КонецФункции

&НаСервереБезКонтекста
Функция СтроковыеУтилиты()
	Возврат ВнешниеОбработки.Создать("СтроковыеУтилиты");
КонецФункции

&НаСервереБезКонтекста
Функция Регистры(ПрефиксОбъектов, ОтборПоПрефиксу)
	
	Регистры = Новый Соответствие;
	Регистры.Вставить("РегистрыСведений", Новый Массив);
	Регистры.Вставить("РегистрыНакопления", Новый Массив);
	
	Для Каждого КлючЗначение Из Регистры Цикл
		
		Для Каждого Регистр Из Метаданные[КлючЗначение.Ключ] Цикл
			
			Если ОтборПоПрефиксу И Не ИмяСодержитПрефикс(Регистр.Имя, ПрефиксОбъектов) Тогда
				Продолжить;
			КонецЕсли;
			
			СтруктураРегистра = Новый Структура;
			СтруктураРегистра.Вставить("Имя", 			Регистр.Имя);
			СтруктураРегистра.Вставить("Синоним", 		Регистр.Синоним);
			СтруктураРегистра.Вставить("ПолноеИмя", 	Регистр.ПолноеИмя());
			
			КлючЗначение.Значение.Добавить(СтруктураРегистра);
			
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат Регистры;

КонецФункции

#КонецОбласти
